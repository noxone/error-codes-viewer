<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.olafneumann</groupId>
	<artifactId>error-codes-viewer</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<name>Error Codes Viewer</name>

	<properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <github.pages.directory>gh-pages</github.pages.directory>
        <github.pages.cname>error-codes.olafneumann.org</github.pages.cname>

        <kotlin.code.style>official</kotlin.code.style>
        <kotlin.version>1.4.21</kotlin.version>
        <kotlinx.coroutines.version>1.4.2</kotlinx.coroutines.version>
        <ktor.version>1.5.0</ktor.version>
        <junit.version>4.12</junit.version>

        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <repositories>
        <repository>
            <id>jcenter</id>
            <name>jcenter</name>
            <url>https://jcenter.bintray.com</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-js</artifactId>
            <version>${kotlin.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-html-js</artifactId>
            <version>0.7.2</version>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-serialization-core-js</artifactId>
            <version>1.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-serialization-json-js</artifactId>
            <version>1.1.0</version>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-core</artifactId>
            <version>${kotlinx.coroutines.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-core-js</artifactId>
            <version>${kotlinx.coroutines.version}</version>
        </dependency>

        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-client-core</artifactId>
            <version>${ktor.version}</version>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-client-js</artifactId>
            <version>${ktor.version}</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <build>
		<pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.1.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>1.6</version>
                    <configuration>
                        <passphrase>${env.GPG_PASSPHRASE}</passphrase>
                        <useAgent>false</useAgent>
                    </configuration>
                    <executions>
                        <execution>
                            <id>sign-artifacts</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>sign</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>3.1.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.3</version>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>3.2.4</version>
                </plugin>
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.9.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.2.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>2.22.2</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>tidy-maven-plugin</artifactId>
                    <version>1.1.0</version>
                </plugin>

                <!-- Others -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>2.8.1</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.8.6</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <sourceDirectory>src/main/kotlin</sourceDirectory>
        <testSourceDirectory>src/test/kotlin</testSourceDirectory>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${basedir}/${github.pages.directory}</directory>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <groupId>org.jetbrains.kotlin</groupId>

                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>js</goal>
                        </goals>
                        <configuration>
                            <sourceMap>true</sourceMap> <!-- source map is useful for debugging in tools that support source maps -->
                            <outputFile>${project.build.outputDirectory}/${project.artifactId}.js</outputFile>
                            <sourceDirs>
                                <source>src/main/kotlin</source>
                            </sourceDirs>
                        </configuration>
                    </execution>
                    <!--<execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-js</goal>
                        </goals>
                    </execution>-->
                </executions>
                <configuration>
                    <compilerPlugins>
                        <plugin>kotlinx-serialization</plugin>
                    </compilerPlugins>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-serialization</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- unpack kotlin.js to target/classes/lib for example index.html -->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>extract-kotlinjs</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeArtifactIds>kotlin-stdlib-js</includeArtifactIds>
                            <outputDirectory>${project.build.outputDirectory}/lib</outputDirectory>
                            <includes>**\/*.js</includes>
                            <excludes>**\/*.meta.js</excludes> <!-- we don't need meta.js files in runtime -->
                        </configuration>
                    </execution>
                    <execution>
                        <id>extract-kotlinx-html-js</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeArtifactIds>kotlinx-html-js</includeArtifactIds>
                            <outputDirectory>${project.build.outputDirectory}/lib</outputDirectory>
                            <includes>**\/*.js</includes>
                            <excludes>**\/*.meta.js
                            </excludes>                            <!-- we don't need meta.js files in runtime -->
                        </configuration>
                    </execution>
                    <execution>
                        <id>extract-kotlinx-coroutines-core-js</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeArtifactIds>kotlinx-coroutines-core-js</includeArtifactIds>
                            <outputDirectory>${project.build.outputDirectory}/lib</outputDirectory>
                            <includes>**\/*.js</includes>
                            <excludes>**\/*.meta.js
                            </excludes>                            <!-- we don't need meta.js files in runtime -->
                        </configuration>
                    </execution>
                    <execution>
                        <id>extract-kotlinx-serialization-core-js</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeArtifactIds>kotlinx-serialization-core-js</includeArtifactIds>
                            <outputDirectory>${project.build.outputDirectory}/lib</outputDirectory>
                            <includes>**\/*.js</includes>
                            <excludes>**\/*.meta.js
                            </excludes>                            <!-- we don't need meta.js files in runtime -->
                        </configuration>
                    </execution>
                    <execution>
                        <id>extract-kotlinx-serialization-json-js</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeArtifactIds>kotlinx-serialization-json-js</includeArtifactIds>
                            <outputDirectory>${project.build.outputDirectory}/lib</outputDirectory>
                            <includes>**\/*.js</includes>
                            <excludes>**\/*.meta.js
                            </excludes>                            <!-- we don't need meta.js files in runtime -->
                        </configuration>
                    </execution>
                    <execution>
                        <id>extract-atomicfu-js</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeArtifactIds>atomicfu-js</includeArtifactIds>
                            <outputDirectory>${project.build.outputDirectory}/lib</outputDirectory>
                            <includes>**\/*.js</includes>
                            <excludes>**\/*.meta.js
                            </excludes>                            <!-- we don't need meta.js files in runtime -->
                        </configuration>
                    </execution>

                    <execution>
                        <id>extract-ktor-client-core-js</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeArtifactIds>ktor-client-core-js</includeArtifactIds>
                            <outputDirectory>${project.build.outputDirectory}/lib</outputDirectory>
                            <includes>**\/*.js</includes>
                            <excludes>**\/*.meta.js
                            </excludes>                            <!-- we don't need meta.js files in runtime -->
                        </configuration>
                    </execution>
                    <execution>
                        <id>extract-ktor-client-js</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeArtifactIds>ktor-client-js</includeArtifactIds>
                            <outputDirectory>${project.build.outputDirectory}/lib</outputDirectory>
                            <includes>**\/*.js</includes>
                            <excludes>**\/*.meta.js
                            </excludes>                            <!-- we don't need meta.js files in runtime -->
                        </configuration>
                    </execution>
                    <execution>
                        <id>extract-ktor-http-cio-js</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeArtifactIds>ktor-http-cio-js</includeArtifactIds>
                            <outputDirectory>${project.build.outputDirectory}/lib</outputDirectory>
                            <includes>**\/*.js</includes>
                            <excludes>**\/*.meta.js
                            </excludes>                            <!-- we don't need meta.js files in runtime -->
                        </configuration>
                    </execution>
                    <execution>
                        <id>extract-ktor-http-js</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeArtifactIds>ktor-http-js</includeArtifactIds>
                            <outputDirectory>${project.build.outputDirectory}/lib</outputDirectory>
                            <includes>**\/*.js</includes>
                            <excludes>**\/*.meta.js
                            </excludes>                            <!-- we don't need meta.js files in runtime -->
                        </configuration>
                    </execution>
                    <execution>
                        <id>extract-ktor-io-js</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeArtifactIds>ktor-io-js</includeArtifactIds>
                            <outputDirectory>${project.build.outputDirectory}/lib</outputDirectory>
                            <includes>**\/*.js</includes>
                            <excludes>**\/*.meta.js
                            </excludes>                            <!-- we don't need meta.js files in runtime -->
                        </configuration>
                    </execution>
                    <execution>
                        <id>extract-ktor-utils-js</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeArtifactIds>ktor-utils-js</includeArtifactIds>
                            <outputDirectory>${project.build.outputDirectory}/lib</outputDirectory>
                            <includes>**\/*.js</includes>
                            <excludes>**\/*.meta.js
                            </excludes>                            <!-- we don't need meta.js files in runtime -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-docs</id>
                        <!-- here the phase you need -->
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/${github.pages.directory}/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/target/classes</directory>
                                    <includes>
                                        <include>index.html</include>
                                        <include>${project.artifactId}.js</include>
                                        <include>lib/**/*</include>
                                        <include>**/*.css</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-readme</id>
                        <!-- here the phase you need -->
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/${github.pages.directory}/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}</directory>
                                    <includes>
                                        <include>README.md</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>CNAME</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo file="${basedir}/${github.pages.directory}/CNAME">
                                    <![CDATA[${github.pages.cname}]]></echo>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>testCompile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
	</build>
</project>